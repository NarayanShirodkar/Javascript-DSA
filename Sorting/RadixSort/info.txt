Radix Sort


- Radix sort is a special sprting algorithm that works on lists of numbers
- It never makes comparisons between elements.
- It exploits the fact that information about the size of a number is encoded in the number of digits.
- More digits means a bigger number.



RADIX SORT HELPERS

In order to implement radix sort, its helpful to build a few helper functions first:

    getDigit(num,place)-> returns the digit in num at the given place value.

        function getDigit(num,i) {
            return Math.floor(Math.abs(num)/Math.pow(10,i)) %10;
        }

    digitCount(num) - returns the number of digits in num

        function digitCount(num) {
            if(num === 0) return 1;
            return Math.floor(Math.log10(Math.abs(num))) + 1;
        }

    mostDigits(nums) -> Givene an array of numbers, returns the number of digits in the largest numbers in the list.

        function mostDigits(nums) {
            let maxDigits = 0
            for(let i = 0; i < nums.length; i+=1) {
                maxDigits = Math.max(maxDigits,digitCount(nums[i]));
            }
            return maxDigits;
        }


PSEUDO CODE FOR RADIX SORT:

- Define a function that accepts list of numbers.
- Figure out how many digits the largest number has.
- Loop from k=0 upto this largest number of digits.
- For each iteration of the loop:
    - Create buckets for each digit(0 to 9)
    - Place each number in the corresponding bucket based on its kth digit.
- Replace our existing array with values in our buckets, starting with 0 and going up to 9.
- return list at the end!


COMPLEXITY

    - TIME COMPLEXITY => O(n*k)  => best, worst, average
    - SPACE COMPLEXITY => O(n+k)